{"version":3,"sources":["utils/request.ts","services/index.ts","components/Article.tsx","components/Home.tsx","utils/entities.ts","utils/index.ts","components/Detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","defaults","baseURL","headers","post","interceptors","request","use","config","error","Promise","reject","response","status","res","data","code","message","getNews","a","get","getNewsById","id","Article","cover","title","date","to","className","src","alt","Home","useState","articles","setArticles","useEffect","list","fetch","map","item","lt","gt","amp","quot","apos","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","parseText","article","content","replace","key","entities","re","RegExp","texts","match","index","includes","idx","type","value","Detail","useParams","setArticle","setTexts","news","formatTexts","transcript","getArticle","source","controls","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.6c79eb4e.chunk.js","sourcesContent":["import axios from \"axios\";\nconst { REACT_APP_API = \"/api\" } = process.env;\naxios.defaults.baseURL = REACT_APP_API;\n// axios.defaults.headers.common['X-Token'] = AUTH_TOKEN;\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// Add a request interceptor\naxios.interceptors.request.use(\n  (config) => config,\n  (error) => Promise.reject(error)\n);\n\n// Add a response interceptor\naxios.interceptors.response.use((response) => {\n  const { status, data: res } = response;\n  if (status === 200) {\n    const { code, message, data } = res;\n    if (code === 0) {\n      return data;\n    }\n    return Promise.reject(message);\n  }\n  return Promise.reject(\"error\");\n});\n\nexport default axios;\n","import request from \"../utils/request\";\n\nexport type News = {\n  id?: number;\n  title: string;\n  src: string;\n  cover: string;\n  source: string;\n  transcript: string;\n  date: string;\n};\n\nexport type Translation = {\n  src: string;\n  dst: string;\n};\n\nexport async function getNews() {\n  return request.get<null, { list: News[] }>(\"/news\");\n}\n\nexport async function getNewsById(id: string) {\n  return request.post<null, News>(\"/news/detail\", {\n    id,\n  });\n}\n\nexport async function translate(q: string) {\n  return request.post<null, { list: Translation[] | null }>(\"/translate\", {\n    q,\n  });\n}\n","import { Link } from \"react-router-dom\";\n\nimport { News } from \"../services\";\nimport \"./Article.css\";\n\nexport default function Article({ id, cover, title, date }: News) {\n  return (\n    <Link to={`/detail/${id}`} className=\"article-wrap\">\n      <img src={cover} alt={title} />\n      <p className=\"text\">{date}</p>\n      <p className=\"text title\">{title}</p>\n    </Link>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getNews, News } from \"../services\";\n\nimport Article from \"./Article\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  const [articles, setArticles] = useState<News[]>([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const { list } = await getNews();\n      setArticles(list);\n    };\n    fetch();\n  }, []);\n  return (\n    <ul className=\"home\">\n      {articles.map((item) => (\n        <li className=\"article-wrap\" key={item.id}>\n          <Article {...item} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","export default {\n  lt: \"\", // < 和 > 渲染会出错\n  gt: \"\",\n  amp: \"&\",\n  quot: '\"',\n  apos: \"'\",\n  Agrave: \"À\",\n  Aacute: \"Á\",\n  Acirc: \"Â\",\n  Atilde: \"Ã\",\n  Auml: \"Ä\",\n  Aring: \"Å\",\n  AElig: \"Æ\",\n  Ccedil: \"Ç\",\n  Egrave: \"È\",\n  Eacute: \"É\",\n  Ecirc: \"Ê\",\n  Euml: \"Ë\",\n  Igrave: \"Ì\",\n  Iacute: \"Í\",\n  Icirc: \"Î\",\n  Iuml: \"Ï\",\n  ETH: \"Ð\",\n  Ntilde: \"Ñ\",\n  Ograve: \"Ò\",\n  Oacute: \"Ó\",\n  Ocirc: \"Ô\",\n  Otilde: \"Õ\",\n  Ouml: \"Ö\",\n  Oslash: \"Ø\",\n  Ugrave: \"Ù\",\n  Uacute: \"Ú\",\n  Ucirc: \"Û\",\n  Uuml: \"Ü\",\n  Yacute: \"Ý\",\n  THORN: \"Þ\",\n  szlig: \"ß\",\n  agrave: \"à\",\n  aacute: \"á\",\n  acirc: \"â\",\n  atilde: \"ã\",\n  auml: \"ä\",\n  aring: \"å\",\n  aelig: \"æ\",\n  ccedil: \"ç\",\n  egrave: \"è\",\n  eacute: \"é\",\n  ecirc: \"ê\",\n  euml: \"ë\",\n  igrave: \"ì\",\n  iacute: \"í\",\n  icirc: \"î\",\n  iuml: \"ï\",\n  eth: \"ð\",\n  ntilde: \"ñ\",\n  ograve: \"ò\",\n  oacute: \"ó\",\n  ocirc: \"ô\",\n  otilde: \"õ\",\n  ouml: \"ö\",\n  oslash: \"ø\",\n  ugrave: \"ù\",\n  uacute: \"ú\",\n  ucirc: \"û\",\n  uuml: \"ü\",\n  yacute: \"ý\",\n  thorn: \"þ\",\n  yuml: \"ÿ\",\n  nbsp: \" \",\n  iexcl: \"¡\",\n  cent: \"¢\",\n  pound: \"£\",\n  curren: \"¤\",\n  yen: \"¥\",\n  brvbar: \"¦\",\n  sect: \"§\",\n  uml: \"¨\",\n  copy: \"©\",\n  ordf: \"ª\",\n  laquo: \"«\",\n  not: \"¬\",\n  shy: \"­­\",\n  reg: \"®\",\n  macr: \"¯\",\n  deg: \"°\",\n  plusmn: \"±\",\n  sup2: \"²\",\n  sup3: \"³\",\n  acute: \"´\",\n  micro: \"µ\",\n  para: \"¶\",\n  middot: \"·\",\n  cedil: \"¸\",\n  sup1: \"¹\",\n  ordm: \"º\",\n  raquo: \"»\",\n  frac14: \"¼\",\n  frac12: \"½\",\n  frac34: \"¾\",\n  iquest: \"¿\",\n  times: \"×\",\n  divide: \"÷\",\n  forall: \"∀\",\n  part: \"∂\",\n  exist: \"∃\",\n  empty: \"∅\",\n  nabla: \"∇\",\n  isin: \"∈\",\n  notin: \"∉\",\n  ni: \"∋\",\n  prod: \"∏\",\n  sum: \"∑\",\n  minus: \"−\",\n  lowast: \"∗\",\n  radic: \"√\",\n  prop: \"∝\",\n  infin: \"∞\",\n  ang: \"∠\",\n  and: \"∧\",\n  or: \"∨\",\n  cap: \"∩\",\n  cup: \"∪\",\n  int: \"∫\",\n  there4: \"∴\",\n  sim: \"∼\",\n  cong: \"≅\",\n  asymp: \"≈\",\n  ne: \"≠\",\n  equiv: \"≡\",\n  le: \"≤\",\n  ge: \"≥\",\n  sub: \"⊂\",\n  sup: \"⊃\",\n  nsub: \"⊄\",\n  sube: \"⊆\",\n  supe: \"⊇\",\n  oplus: \"⊕\",\n  otimes: \"⊗\",\n  perp: \"⊥\",\n  sdot: \"⋅\",\n  Alpha: \"Α\",\n  Beta: \"Β\",\n  Gamma: \"Γ\",\n  Delta: \"Δ\",\n  Epsilon: \"Ε\",\n  Zeta: \"Ζ\",\n  Eta: \"Η\",\n  Theta: \"Θ\",\n  Iota: \"Ι\",\n  Kappa: \"Κ\",\n  Lambda: \"Λ\",\n  Mu: \"Μ\",\n  Nu: \"Ν\",\n  Xi: \"Ξ\",\n  Omicron: \"Ο\",\n  Pi: \"Π\",\n  Rho: \"Ρ\",\n  Sigma: \"Σ\",\n  Tau: \"Τ\",\n  Upsilon: \"Υ\",\n  Phi: \"Φ\",\n  Chi: \"Χ\",\n  Psi: \"Ψ\",\n  Omega: \"Ω\",\n  alpha: \"α\",\n  beta: \"β\",\n  gamma: \"γ\",\n  delta: \"δ\",\n  epsilon: \"ε\",\n  zeta: \"ζ\",\n  eta: \"η\",\n  theta: \"θ\",\n  iota: \"ι\",\n  kappa: \"κ\",\n  lambda: \"λ\",\n  mu: \"μ\",\n  nu: \"ν\",\n  xi: \"ξ\",\n  omicron: \"ο\",\n  pi: \"π\",\n  rho: \"ρ\",\n  sigmaf: \"ς\",\n  sigma: \"σ\",\n  tau: \"τ\",\n  upsilon: \"υ\",\n  phi: \"φ\",\n  chi: \"χ\",\n  psi: \"ψ\",\n  omega: \"ω\",\n  thetasym: \"ϑ\",\n  upsih: \"ϒ\",\n  piv: \"ϖ\",\n  OElig: \"Œ\",\n  oelig: \"œ\",\n  Scaron: \"Š\",\n  scaron: \"š\",\n  Yuml: \"Ÿ\",\n  fnof: \"ƒ\",\n  circ: \"ˆ\",\n  tilde: \"˜\",\n  ensp: \" \",\n  emsp: \" \",\n  thinsp: \" \",\n  zwnj: \"‌\",\n  zwj: \"‍\",\n  lrm: \"‎\",\n  rlm: \"‏\",\n  ndash: \"–\",\n  mdash: \"—\",\n  lsquo: \"‘\",\n  rsquo: \"’\",\n  sbquo: \"‚\",\n  ldquo: \"“\",\n  rdquo: \"”\",\n  bdquo: \"„\",\n  dagger: \"†\",\n  Dagger: \"‡\",\n  bull: \"•\",\n  hellip: \"…\",\n  permil: \"‰\",\n  prime: \"′\",\n  Prime: \"″\",\n  lsaquo: \"‹\",\n  rsaquo: \"›\",\n  oline: \"‾\",\n  euro: \"€\",\n  trade: \"™\",\n  larr: \"←\",\n  uarr: \"↑\",\n  rarr: \"→\",\n  darr: \"↓\",\n  harr: \"↔\",\n  crarr: \"↵\",\n  lceil: \"⌈\",\n  rceil: \"⌉\",\n  lfloor: \"⌊\",\n  rfloor: \"⌋\",\n  loz: \"◊\",\n  spades: \"♠\",\n  clubs: \"♣\",\n  hearts: \"♥\",\n  diams: \"♦\",\n  \"#8226\": \"•\",\n  \"#8212\": \"—\",\n} as { [key: string]: string };\n","import entities from \"./entities\";\n\nexport function formatPlayTime(seconds: number) {\n  if (!seconds) {\n    return \"00:00\";\n  }\n  const min = parseInt(String(seconds / 60));\n  const sec = parseInt(String(seconds % 60));\n  return `${min < 10 ? \"0\" : \"\"}${min}:${sec < 10 ? \"0\" : \"\"}${sec}`;\n}\n\ndeclare global {\n  interface Window {\n    dd: any;\n  }\n}\n\nexport function changeTitle(title: string) {\n  const { env, biz } = window.dd;\n  if (env.platform !== \"notInDingTalk\") {\n    biz.navigation.setTitle({\n      title,\n    });\n  } else {\n    document.title = title;\n  }\n}\n\nexport type Text = {\n  idx: number;\n  type: \"title\" | \"text\";\n  value: string;\n};\n\nexport function parseText(article: string): Text[] {\n  let content = article.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  for (let key in entities) {\n    const re = new RegExp(\"&\" + key + \";\", \"g\");\n    content = content.replace(re, entities[key]);\n  }\n  const hReg = /<p[^>]*>(.*?)<\\/p>/gm;\n  const texts = content.match(hReg);\n\n  if (texts) {\n    return texts.map((item, index) => {\n      if (item.includes(\"</strong>\")) {\n        const tRe = /<p><strong[^>]*>(.*?)<\\/strong><\\/p>/g;\n        return {\n          idx: index,\n          type: \"title\",\n          value: item.replace(tRe, \"$1\"),\n        };\n      }\n      return {\n        idx: index,\n        type: \"text\",\n        value: item.replace(/<p[^>]*>(.*?)<\\/p>/g, \"$1\"),\n      };\n    });\n  }\n  return [];\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getNewsById, News } from \"../services\";\nimport { Text, parseText } from \"../utils\";\n\nimport \"./Detail.css\";\n\nexport default function Detail() {\n  let { id } = useParams<{ id: string }>();\n  const [article, setArticle] = useState<News>();\n  const [texts, setTexts] = useState<Text[]>([]);\n\n  useEffect(() => {\n    const getArticle = async () => {\n      const news = await getNewsById(id);\n      setArticle(news);\n      const formatTexts = parseText(news.transcript);\n      setTexts(formatTexts);\n    };\n    getArticle();\n  }, [id]);\n\n  return (\n    <div className=\"detail\">\n      <div>\n        {texts.map(({ idx, type, value }) => {\n          return (\n            <p className={type} key={idx}>\n              {value}\n            </p>\n          );\n        })}\n      </div>\n      {article?.source && (\n        <audio controls src={article.src} className=\"audio\" />\n      )}\n    </div>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Detail from \"./components/Detail\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <Detail />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\n// import \"tailwindcss/tailwind.css\"\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}